{"version":3,"sources":["components/header/header.js","actions/actionModal.js","actions/actionType.js","components/images-js/card-img.js","components/images-js/api.js","components/modal/modal.js","App.js","reducers/index.js","reducers/modalReducers.js","store/index.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","index_es","icon","id","type","placeholder","Component","createModal","dispatch","imagen","payload","closeModal","CardImages","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modalOpen","displayModal","bind","assertThisInitialized","console","log","setState","objectSpread","createModalAction","closeModalAction","_this2","src","img","alt","onClick","connect","ImagesApi","imag","upload","fetch","then","response","json","results","_this3","updateFunction","concat","dataImagAcc","map","i","index","card_img","urls","thumb","key","ModalComponent","modalReducers","modal","library","add","fab","faBell","faUser","faComment","faEllipsisH","faCommentDots","faUpload","faAngleLeft","App","pixeles","scrollPixel","document","documentElement","scrollTop","window","innerHeight","offsetHeight","onscroll","screen","height","header_header","images_js_api","modal_modal","rootReducer","combineReducers","arguments","length","undefined","action","createStore","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","Boolean","location","hostname","match","ReactDOM","render","es","store","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.823c4220.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './header.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass Header extends Component{\n\n    render(){\n        return(\n            <div className=\"header-container\">\n                <nav className=\"nav-container\">\n                        <FontAwesomeIcon icon={['fab', 'pinterest']} id=\"iconPinteres\"/>\n                        <input className=\"col-6\" id=\"search-input\" type=\"text\" placeholder=\"Buscar\" />\n                        <button className=\"btn\" >Inicio</button>\n                        <button className=\"btn\" >Siguiendo</button>\n                        <button className=\"btn\" ><FontAwesomeIcon icon=\"user\" id=\"icon-user\"/>Olga</button>\n                        <FontAwesomeIcon icon=\"comment-dots\" id=\"icon\"/>\n                        <FontAwesomeIcon icon=\"bell\" id=\"icon\"/>\n                        <FontAwesomeIcon icon=\"ellipsis-h\" id=\"icon\"/>\n                </nav>\n            </div>\n        )\n    }\n}\nexport default Header;","import * as actions from './actionType';\n\nexport const createModal = dispatch => imagen =>{\n    dispatch({\n        type: actions.OPEN_MODAL,\n        payload: imagen\n    });\n};\n\nexport const closeModal = dispatch =>  {\n    dispatch({\n        type: actions.CLOSE_MODAL,\n        payload: null\n    });\n};\n\n","export const OPEN_MODAL = \"OPEN MODAL\";\nexport const CLOSE_MODAL= \"CLOSE MODAL\";\n\n\n// aqui se colocan los nombres de las acciones en mayusculas. \n//luego se debe crear un archivo que va a recibir esta actions","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport { createModal, closeModal }   from '../../actions/actionModal';\nimport './api.css'\n\n\n\nclass CardImages extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modalOpen: false\n        };\n        this.displayModal= this.displayModal.bind(this)\n        this.closeModal= this.closeModal.bind(this)\n    }\n    displayModal(a){\n        console.log('soy un modal')\n        this.setState({\n            ...this.state,\n            modalOpen: true\n        });\n        this.props.createModalAction(a);\n    }\n    closeModal(){\n        console.log('hice click')\n        this.setState({\n            modalOpen: false\n        });\n        this.props.closeModalAction();\n    }\n    render(){\n        return(\n            <div>\n                <img src={this.props.img} alt=\"imagsCards\" onClick={()=>this.displayModal(this.props.img)}/>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    createModalAction: createModal(dispatch),\n    closeModalAction: closeModal.bind(null, dispatch)\n  });\n\n\n  const mapStateToProps = state => ({\n    ...state\n    });\n\n    export default \n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n    )(CardImages);\n\n\n","import React, {Component} from 'react';\nimport './api.css'\nimport CardImages from './card-img.js';\nimport { connect } from 'react-redux';\nimport { createModal }   from '../../actions/actionModal';\n\n\nclass ImagesApi extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            imag: [],\n            upload: false,\n        }\n    }\n    componentDidMount(){\n        fetch('https://api.unsplash.com/search/photos?page=1&per_page=100&query=love&client_id=f548773e48f40366d0c1cb18ec4fb32c9fc3dc4ec9c6aa09b06a0e9d68e6bcf0')\n        .then(response => response.json())\n        .then(json =>{\n            this.setState({\n                ...this.state,\n                imag: json.results,\n            })\n        });\n    }\n    componentDidUpdate(){\n        console.log(this.props)\n        if(this.props.updateFunction !== this.state.upload){\n            this.setState({\n                ...this.state,\n                upload: true,\n                \n            })\n            fetch('https://api.unsplash.com/search/photos?page=2&per_page=100&query=love&client_id=f548773e48f40366d0c1cb18ec4fb32c9fc3dc4ec9c6aa09b06a0e9d68e6bcf0')\n            .then(response => response.json())\n            .then(json =>{\n                this.setState({\n                    upload: true,\n                    imag: this.state.imag.concat(json.results)\n                })\n            });\n        }\n    }\n    render(){\n        const dataImag = this.state.imag\n        const dataImagAcc = dataImag.map((i,index)=> {\n            return <CardImages img={i.urls.thumb} alt=\"imagsApi\" key={index} id=\"card-img\"/>\n        })\n        return(\n            <div className=\"cards\" id=\"returnApi\">\n                {dataImagAcc}\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    createModalAction: createModal\n});\n\n\nconst mapStateToProps = state => ({\n    ...state\n    });\n\n    export default \n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n    )(ImagesApi);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { createModal, closeModal }   from '../../actions/actionModal';\nimport './modal.css';\n// import CardImages from '../images-js/card-img';\n\nclass ModalComponent extends Component {\n    render(){\n        return(\n            <div className=\"container-modal\">\n                <div className=\"info-modal\">\n                    <FontAwesomeIcon onClick={this.props.closeModalAction} icon=\"angle-left\" id=\"icon-angle\"/>\n                </div>\n                <div className=\"main-modal\">\n                    <div className=\"header-modal\">\n                        <FontAwesomeIcon icon=\"ellipsis-h\" id=\"icon-ellipsis\"/>\n                        <button className=\"btn-modal\" ><FontAwesomeIcon icon=\"upload\" id=\"icon-upload\"/>Enviar</button>\n                        <button className=\"btn-modal save\">Guardar</button>\n                    </div>\n                <div className=\"body-modal\">\n                    <div className=\"cont-imag\">\n                        <img id=\"modal-cards\" src={this.props.modalReducers.modal} alt=\"imgModal\"/>\n                    </div>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    createModalAction: createModal.bind(null, dispatch),\n    closeModalAction: closeModal.bind(null, dispatch)\n});\n\n\nconst mapStateToProps = state => ({\n    ...state\n    });\n\n    export default \n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n    )(ModalComponent);\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header/header.js';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faBell, faUser, faComment, faEllipsisH, faCommentDots, faUpload, faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport ImagesApi from './components/images-js/api.js';\nimport { createModal, closeModal } from './actions/actionModal';\nimport { connect } from 'react-redux';\nimport ModalComponent from './components/modal/modal';\n\nlibrary.add(fab, faBell, faUser, faComment, faEllipsisH, faCommentDots, faUpload, faAngleLeft)\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state={\n      pixeles: false,\n    }\n    this.scrollPixel = this.scrollPixel.bind(this);\n  }\n  scrollPixel() {\n    // console.log(\"Llevamos  > \"+(document.documentElement.scrollTop + window.innerHeight));\n    // console.log(\"Limite > \"+(document.documentElement.offsetHeight * 0.8 ));\n    if (document.documentElement.scrollTop + window.innerHeight > document.documentElement.offsetHeight * 0.8 ){\n      this.setState({\n        pixeles: true,\n      })\n    }\n  }\n  componentDidMount(){\n    window.onscroll = ()=> this.scrollPixel()\n    console.log(window.screen.height)\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      <Header/>\n      <ImagesApi updateFunction={this.state.pixeles}/>\n      {this.props.modalReducers.modal &&\n      <ModalComponent />\n      }\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  createModalAction: createModal.bind(null, dispatch),\n  closeModalAction: closeModal.bind(null, dispatch)\n});\n\n\n  const mapStateToProps = state => ({\n    ...state\n    });\n\n    export default \n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n    )(App);","import { combineReducers } from 'redux';\nimport modalReducers from './modalReducers';\n\nconst rootReducer = combineReducers({\n    modalReducers\n});\n\nexport default rootReducer;","import * as actions from '../actions/actionType';\n\nexport default (\n    state = {\n        modal: false,\n    },\n    action\n) => {\n    switch(action.type){\n        case actions.OPEN_MODAL:\n        return {\n            ...state,\n            modal: action.payload\n        };\n        case actions.CLOSE_MODAL:\n        return{\n            ...state,\n            modal: false\n        }\n        default:\n            return {...state};\n    }\n};\n\n\n\n\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers';\n\nexport default createStore(\n  reducer,\n  {},\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>\n, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}